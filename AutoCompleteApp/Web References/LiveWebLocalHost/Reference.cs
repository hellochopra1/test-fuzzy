//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace AutoCompleteApp.LiveWebLocalHost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AutoCompleteOMSTSoap", Namespace="http://tempuri.org/")]
    public partial class AutoCompleteOMST : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SelectTopKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSearchCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectTopProxyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockDownKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockDownProxyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseProxyOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncreaseSearchCounterOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AutoCompleteOMST() {
            this.Url = global::AutoCompleteApp.Properties.Settings.Default.AutoCompleteApp_LiveWebLocalHost_AutoCompleteOMST;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SelectTopKeywordCompletedEventHandler SelectTopKeywordCompleted;
        
        /// <remarks/>
        public event ResetSearchCounterCompletedEventHandler ResetSearchCounterCompleted;
        
        /// <remarks/>
        public event SelectTopProxyCompletedEventHandler SelectTopProxyCompleted;
        
        /// <remarks/>
        public event LockDownKeywordCompletedEventHandler LockDownKeywordCompleted;
        
        /// <remarks/>
        public event LockDownProxyCompletedEventHandler LockDownProxyCompleted;
        
        /// <remarks/>
        public event ReleaseKeywordCompletedEventHandler ReleaseKeywordCompleted;
        
        /// <remarks/>
        public event ReleaseProxyCompletedEventHandler ReleaseProxyCompleted;
        
        /// <remarks/>
        public event IncreaseSearchCounterCompletedEventHandler IncreaseSearchCounterCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectTopKeyword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectTopKeyword(int Id, bool IsTesting) {
            object[] results = this.Invoke("SelectTopKeyword", new object[] {
                        Id,
                        IsTesting});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectTopKeywordAsync(int Id, bool IsTesting) {
            this.SelectTopKeywordAsync(Id, IsTesting, null);
        }
        
        /// <remarks/>
        public void SelectTopKeywordAsync(int Id, bool IsTesting, object userState) {
            if ((this.SelectTopKeywordOperationCompleted == null)) {
                this.SelectTopKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectTopKeywordOperationCompleted);
            }
            this.InvokeAsync("SelectTopKeyword", new object[] {
                        Id,
                        IsTesting}, this.SelectTopKeywordOperationCompleted, userState);
        }
        
        private void OnSelectTopKeywordOperationCompleted(object arg) {
            if ((this.SelectTopKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectTopKeywordCompleted(this, new SelectTopKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetSearchCounter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ResetSearchCounter() {
            object[] results = this.Invoke("ResetSearchCounter", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ResetSearchCounterAsync() {
            this.ResetSearchCounterAsync(null);
        }
        
        /// <remarks/>
        public void ResetSearchCounterAsync(object userState) {
            if ((this.ResetSearchCounterOperationCompleted == null)) {
                this.ResetSearchCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSearchCounterOperationCompleted);
            }
            this.InvokeAsync("ResetSearchCounter", new object[0], this.ResetSearchCounterOperationCompleted, userState);
        }
        
        private void OnResetSearchCounterOperationCompleted(object arg) {
            if ((this.ResetSearchCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSearchCounterCompleted(this, new ResetSearchCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectTopProxy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectTopProxy(int Id) {
            object[] results = this.Invoke("SelectTopProxy", new object[] {
                        Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectTopProxyAsync(int Id) {
            this.SelectTopProxyAsync(Id, null);
        }
        
        /// <remarks/>
        public void SelectTopProxyAsync(int Id, object userState) {
            if ((this.SelectTopProxyOperationCompleted == null)) {
                this.SelectTopProxyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectTopProxyOperationCompleted);
            }
            this.InvokeAsync("SelectTopProxy", new object[] {
                        Id}, this.SelectTopProxyOperationCompleted, userState);
        }
        
        private void OnSelectTopProxyOperationCompleted(object arg) {
            if ((this.SelectTopProxyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectTopProxyCompleted(this, new SelectTopProxyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LockDownKeyword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LockDownKeyword(int Id) {
            this.Invoke("LockDownKeyword", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void LockDownKeywordAsync(int Id) {
            this.LockDownKeywordAsync(Id, null);
        }
        
        /// <remarks/>
        public void LockDownKeywordAsync(int Id, object userState) {
            if ((this.LockDownKeywordOperationCompleted == null)) {
                this.LockDownKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockDownKeywordOperationCompleted);
            }
            this.InvokeAsync("LockDownKeyword", new object[] {
                        Id}, this.LockDownKeywordOperationCompleted, userState);
        }
        
        private void OnLockDownKeywordOperationCompleted(object arg) {
            if ((this.LockDownKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockDownKeywordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LockDownProxy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LockDownProxy(int Id) {
            this.Invoke("LockDownProxy", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void LockDownProxyAsync(int Id) {
            this.LockDownProxyAsync(Id, null);
        }
        
        /// <remarks/>
        public void LockDownProxyAsync(int Id, object userState) {
            if ((this.LockDownProxyOperationCompleted == null)) {
                this.LockDownProxyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockDownProxyOperationCompleted);
            }
            this.InvokeAsync("LockDownProxy", new object[] {
                        Id}, this.LockDownProxyOperationCompleted, userState);
        }
        
        private void OnLockDownProxyOperationCompleted(object arg) {
            if ((this.LockDownProxyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockDownProxyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReleaseKeyword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseKeyword(int Id) {
            this.Invoke("ReleaseKeyword", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void ReleaseKeywordAsync(int Id) {
            this.ReleaseKeywordAsync(Id, null);
        }
        
        /// <remarks/>
        public void ReleaseKeywordAsync(int Id, object userState) {
            if ((this.ReleaseKeywordOperationCompleted == null)) {
                this.ReleaseKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseKeywordOperationCompleted);
            }
            this.InvokeAsync("ReleaseKeyword", new object[] {
                        Id}, this.ReleaseKeywordOperationCompleted, userState);
        }
        
        private void OnReleaseKeywordOperationCompleted(object arg) {
            if ((this.ReleaseKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseKeywordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReleaseProxy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseProxy(int Id) {
            this.Invoke("ReleaseProxy", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void ReleaseProxyAsync(int Id) {
            this.ReleaseProxyAsync(Id, null);
        }
        
        /// <remarks/>
        public void ReleaseProxyAsync(int Id, object userState) {
            if ((this.ReleaseProxyOperationCompleted == null)) {
                this.ReleaseProxyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseProxyOperationCompleted);
            }
            this.InvokeAsync("ReleaseProxy", new object[] {
                        Id}, this.ReleaseProxyOperationCompleted, userState);
        }
        
        private void OnReleaseProxyOperationCompleted(object arg) {
            if ((this.ReleaseProxyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseProxyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IncreaseSearchCounter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IncreaseSearchCounter(int Id) {
            this.Invoke("IncreaseSearchCounter", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void IncreaseSearchCounterAsync(int Id) {
            this.IncreaseSearchCounterAsync(Id, null);
        }
        
        /// <remarks/>
        public void IncreaseSearchCounterAsync(int Id, object userState) {
            if ((this.IncreaseSearchCounterOperationCompleted == null)) {
                this.IncreaseSearchCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncreaseSearchCounterOperationCompleted);
            }
            this.InvokeAsync("IncreaseSearchCounter", new object[] {
                        Id}, this.IncreaseSearchCounterOperationCompleted, userState);
        }
        
        private void OnIncreaseSearchCounterOperationCompleted(object arg) {
            if ((this.IncreaseSearchCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncreaseSearchCounterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SelectTopKeywordCompletedEventHandler(object sender, SelectTopKeywordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectTopKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectTopKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ResetSearchCounterCompletedEventHandler(object sender, ResetSearchCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetSearchCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetSearchCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SelectTopProxyCompletedEventHandler(object sender, SelectTopProxyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectTopProxyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectTopProxyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LockDownKeywordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LockDownProxyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReleaseKeywordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReleaseProxyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IncreaseSearchCounterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591